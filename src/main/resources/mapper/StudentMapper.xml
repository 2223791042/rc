<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="guet.hxm.rc.dao.StudentMapper" >
  <resultMap id="BaseResultMap" type="guet.hxm.rc.entity.Student" >
    <id column="student_id" property="studentId" jdbcType="BIGINT" />
    <result column="student_name" property="studentName" jdbcType="VARCHAR" />
    <result column="graduation_school" property="graduationSchool" jdbcType="VARCHAR" />
    <result column="research_field" property="researchField" jdbcType="VARCHAR" />
    <result column="belong_grade" property="belongGrade" jdbcType="VARCHAR" />
    <result column="student_icon" property="studentIcon" jdbcType="VARCHAR" />
    <result column="upload_time" property="uploadTime" jdbcType="DATE" />
    <result column="student_status" property="studentStatus" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    student_id, student_name, graduation_school, research_field, belong_grade, student_icon, 
    upload_time, student_status
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="guet.hxm.rc.entity.StudentExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from student
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from student
    where student_id = #{studentId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from student
    where student_id = #{studentId,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="guet.hxm.rc.entity.StudentExample" >
    delete from student
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="guet.hxm.rc.entity.Student" >
    insert into student (student_id, student_name, graduation_school, 
      research_field, belong_grade, student_icon, 
      upload_time, student_status)
    values (#{studentId,jdbcType=BIGINT}, #{studentName,jdbcType=VARCHAR}, #{graduationSchool,jdbcType=VARCHAR}, 
      #{researchField,jdbcType=VARCHAR}, #{belongGrade,jdbcType=VARCHAR}, #{studentIcon,jdbcType=VARCHAR}, 
      #{uploadTime,jdbcType=DATE}, #{studentStatus,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="guet.hxm.rc.entity.Student" >
    insert into student
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="studentId != null" >
        student_id,
      </if>
      <if test="studentName != null" >
        student_name,
      </if>
      <if test="graduationSchool != null" >
        graduation_school,
      </if>
      <if test="researchField != null" >
        research_field,
      </if>
      <if test="belongGrade != null" >
        belong_grade,
      </if>
      <if test="studentIcon != null" >
        student_icon,
      </if>
      <if test="uploadTime != null" >
        upload_time,
      </if>
      <if test="studentStatus != null" >
        student_status,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="studentId != null" >
        #{studentId,jdbcType=BIGINT},
      </if>
      <if test="studentName != null" >
        #{studentName,jdbcType=VARCHAR},
      </if>
      <if test="graduationSchool != null" >
        #{graduationSchool,jdbcType=VARCHAR},
      </if>
      <if test="researchField != null" >
        #{researchField,jdbcType=VARCHAR},
      </if>
      <if test="belongGrade != null" >
        #{belongGrade,jdbcType=VARCHAR},
      </if>
      <if test="studentIcon != null" >
        #{studentIcon,jdbcType=VARCHAR},
      </if>
      <if test="uploadTime != null" >
        #{uploadTime,jdbcType=DATE},
      </if>
      <if test="studentStatus != null" >
        #{studentStatus,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="guet.hxm.rc.entity.StudentExample" resultType="java.lang.Integer" >
    select count(*) from student
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update student
    <set >
      <if test="record.studentId != null" >
        student_id = #{record.studentId,jdbcType=BIGINT},
      </if>
      <if test="record.studentName != null" >
        student_name = #{record.studentName,jdbcType=VARCHAR},
      </if>
      <if test="record.graduationSchool != null" >
        graduation_school = #{record.graduationSchool,jdbcType=VARCHAR},
      </if>
      <if test="record.researchField != null" >
        research_field = #{record.researchField,jdbcType=VARCHAR},
      </if>
      <if test="record.belongGrade != null" >
        belong_grade = #{record.belongGrade,jdbcType=VARCHAR},
      </if>
      <if test="record.studentIcon != null" >
        student_icon = #{record.studentIcon,jdbcType=VARCHAR},
      </if>
      <if test="record.uploadTime != null" >
        upload_time = #{record.uploadTime,jdbcType=DATE},
      </if>
      <if test="record.studentStatus != null" >
        student_status = #{record.studentStatus,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update student
    set student_id = #{record.studentId,jdbcType=BIGINT},
      student_name = #{record.studentName,jdbcType=VARCHAR},
      graduation_school = #{record.graduationSchool,jdbcType=VARCHAR},
      research_field = #{record.researchField,jdbcType=VARCHAR},
      belong_grade = #{record.belongGrade,jdbcType=VARCHAR},
      student_icon = #{record.studentIcon,jdbcType=VARCHAR},
      upload_time = #{record.uploadTime,jdbcType=DATE},
      student_status = #{record.studentStatus,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="guet.hxm.rc.entity.Student" >
    update student
    <set >
      <if test="studentName != null" >
        student_name = #{studentName,jdbcType=VARCHAR},
      </if>
      <if test="graduationSchool != null" >
        graduation_school = #{graduationSchool,jdbcType=VARCHAR},
      </if>
      <if test="researchField != null" >
        research_field = #{researchField,jdbcType=VARCHAR},
      </if>
      <if test="belongGrade != null" >
        belong_grade = #{belongGrade,jdbcType=VARCHAR},
      </if>
      <if test="studentIcon != null" >
        student_icon = #{studentIcon,jdbcType=VARCHAR},
      </if>
      <if test="uploadTime != null" >
        upload_time = #{uploadTime,jdbcType=DATE},
      </if>
      <if test="studentStatus != null" >
        student_status = #{studentStatus,jdbcType=VARCHAR},
      </if>
    </set>
    where student_id = #{studentId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="guet.hxm.rc.entity.Student" >
    update student
    set student_name = #{studentName,jdbcType=VARCHAR},
      graduation_school = #{graduationSchool,jdbcType=VARCHAR},
      research_field = #{researchField,jdbcType=VARCHAR},
      belong_grade = #{belongGrade,jdbcType=VARCHAR},
      student_icon = #{studentIcon,jdbcType=VARCHAR},
      upload_time = #{uploadTime,jdbcType=DATE},
      student_status = #{studentStatus,jdbcType=VARCHAR}
    where student_id = #{studentId,jdbcType=BIGINT}
  </update>
</mapper>